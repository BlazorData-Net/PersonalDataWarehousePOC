namespace Controllers
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.OData.Query;
    using Microsoft.AspNetCore.OData.Routing.Controllers;
    using static PersonalDataWarehousePOC.Program;

    [ODataEntity]
    **CLASS DEFINITION**
    public class **CLASS UPPERCASE WITH AN S** : ODataController
    {
        public List<**CLASS NAME**> **CLASS LOWERCASE WITH AN S**()
        {
            // Create a Dataloader
            Dataloader objDataloader = new Dataloader();

            // Call LoadParquet to load data into col**CLASS NAME**
            var col**CLASS NAME** = objDataloader.LoadParquet("**CLASS NAME**").Result;

            // Convert each row into a Dictionary<string, object>, then map that
            // into a new **CLASS NAME** object, using the index as the Id.
            var results = col**CLASS NAME**
                .Select((row, index) =>
                {
                    var dict = row.ToDictionary();

                    return new **CLASS NAME**
                    {
                        // index is zero-based; add 1 if you want a one-based ID
                        Id = index + 1,
**DICTIONARY MAPPING**
                    };
                })
                .ToList();

            return results;
        }

        [EnableQuery]
        public ActionResult<IEnumerable<**CLASS NAME**>> Get()
        {
            return Ok(**CLASS LOWERCASE WITH AN S**());
        }

        [EnableQuery]
        public ActionResult<**CLASS NAME**> Get([FromRoute] int key)
        {
            var item = **CLASS LOWERCASE WITH AN S**().SingleOrDefault(d => d.Id.Equals(key));

            if (item == null)
            {
                return NotFound();
            }

            return Ok(item);
        }
    }
}