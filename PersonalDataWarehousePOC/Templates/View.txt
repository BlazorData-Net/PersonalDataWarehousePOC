namespace Controllers
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;  
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.OData.Query;
    using Microsoft.AspNetCore.OData.Routing.Controllers;
    using static PersonalDataWarehousePOC.Program;

    [ODataEntity]
    public class **CLASS NAME**
    {
        // Model definition
        // (not directly used if returning dictionaries, but left here for reference)
        public int Id { get; set; }
    }

    public class **CLASS NAME**s : ODataController
    {
        [EnableQuery]
        public async Task<ActionResult<IEnumerable<IDictionary<string, object>>>> Get()
        {
            string CurrentScript = "";

            // Load the DataTable
            var viewsFolder = Path.Combine("Data", "Views");
            var fileName = Path.Combine(viewsFolder, $"**CLASS NAME**.view");

            if (System.IO.File.Exists(fileName))
            {
                // Read contents into CurrentScript
                CurrentScript = await System.IO.File.ReadAllTextAsync(fileName);
            }

            Dataloader objDataloader = new Dataloader();

            var result = await objDataloader.RunDynamicCode(CurrentScript);

            return Ok(result);
        }
    }
}